{"version":3,"sources":["main.js"],"names":["el","string","document","querySelector","section","main","canvas","currentColor","thickness","brushColor","vh","window","innerHeight","style","setProperty","mainWidth","parseInt","clientWidth","mainHeight","clientHeight","width","height","ctx","getContext","strokeStyle","value","lineWidth","lineJoin","painting","lastX","lastY","addEventListener","e","offsetX","offsetY","beginPath","moveTo","lineTo","closePath","stroke","touches","pageX","target","offsetLeft","pageY","offsetTop","matches","color16","getComputedStyle","backgroundColor","split","forEach","item","str","match","toString","length"],"mappings":";AAAA,IAAMA,EAAK,SAACC,GAAWC,OAAAA,SAASC,cAAcF,IAExCG,EAAUJ,EAAG,WACbK,EAAOL,EAAG,QACVM,EAASN,EAAG,WACZO,EAAeP,EAAG,iBAClBQ,EAAYR,EAAG,cACfS,EAAaT,EAAG,eAGlBU,EAA0B,IAArBC,OAAOC,YAChBR,EAAQS,MAAMC,YAAY,OAAWJ,GAAAA,OAAAA,EACrC,OACA,IAAMK,EAAYC,SAA4B,GAAnBX,EAAKY,aAC1BC,EAAaF,SAA6B,GAApBX,EAAKc,cACjCb,EAAOc,MAAWL,GAAAA,OAAAA,GAClBT,EAAOe,OAAYH,GAAAA,OAAAA,GACnBZ,EAAOO,MAAMO,MAAWL,GAAAA,OAAAA,EAAxB,MACAT,EAAOO,MAAMQ,OAAYH,GAAAA,OAAAA,EAAzB,MAEA,IAAMI,EAAMhB,EAAOiB,WAAW,MAC9BD,EAAIE,YAAcjB,EAAakB,MAC/BH,EAAII,UAAYlB,EAAUiB,MAC1BH,EAAIK,SAAW,QACf,IAAIC,GAAW,EAEXC,EAAQ,EACRC,EAAQ,EAGZxB,EAAOyB,iBAAiB,YAAa,SAACC,GACpCJ,GAAW,EACXC,EAAQG,EAAEC,QACVH,EAAQE,EAAEE,UAEZ5B,EAAOyB,iBAAiB,YAAa,SAACC,GAChCJ,IACFN,EAAIa,YACJb,EAAIc,OAAOP,EAAOC,GAClBR,EAAIe,OAAOL,EAAEC,QAASD,EAAEE,SACxBZ,EAAIgB,YACJhB,EAAIiB,SACJV,EAAQG,EAAEC,QACVH,EAAQE,EAAEE,WAGd5B,EAAOyB,iBAAiB,UAAW,SAACC,GAClCJ,GAAW,IAGbtB,EAAOyB,iBAAiB,WAAY,SAACC,GACnCJ,GAAW,IAGbtB,EAAOyB,iBAAiB,aAAc,SAACC,GACrCJ,GAAW,EACXC,EAAQG,EAAEQ,QAAQ,GAAGC,MAAQT,EAAEQ,QAAQ,GAAGE,OAAOC,WACjDb,EAAQE,EAAEQ,QAAQ,GAAGI,MAAQZ,EAAEQ,QAAQ,GAAGE,OAAOG,YAEnDvC,EAAOyB,iBAAiB,YAAa,SAACC,GAChCJ,IACFN,EAAIa,YACJb,EAAIc,OAAOP,EAAOC,GAClBR,EAAIe,OACFL,EAAEQ,QAAQ,GAAGC,MAAQT,EAAEQ,QAAQ,GAAGE,OAAOC,WACzCX,EAAEQ,QAAQ,GAAGI,MAAQZ,EAAEQ,QAAQ,GAAGE,OAAOG,WAE3CvB,EAAIgB,YACJhB,EAAIiB,SACJV,EAAQG,EAAEQ,QAAQ,GAAGC,MAAQT,EAAEQ,QAAQ,GAAGE,OAAOC,WACjDb,EAAQE,EAAEQ,QAAQ,GAAGI,MAAQZ,EAAEQ,QAAQ,GAAGE,OAAOG,aAGrDvC,EAAOyB,iBAAiB,WAAY,SAACC,GACnCJ,GAAW,IAGbtB,EAAOyB,iBAAiB,cAAe,SAACC,GACtCJ,GAAW,IAGbrB,EAAawB,iBAAiB,QAAS,SAACC,GACtCV,EAAIE,YAAcQ,EAAEU,OAAOjB,QAE7BjB,EAAUuB,iBAAiB,QAAS,SAACC,GACnCV,EAAII,UAAYM,EAAEU,OAAOjB,QAG3BhB,EAAWsB,iBAAiB,QAAS,SAACC,GAChCA,GAAAA,EAAEU,OAAOI,QAAQ,MAAO,CACtBC,IAAAA,EAAU,IACAC,iBAAiBhB,EAAEU,QAAQO,gBACnCC,MAAM,KAAKC,QAAQ,SAACC,GAClBC,IAAAA,EAAMrC,SAASoC,EAAKE,MAAM,YAAYC,SAAS,IACtC,IAAfF,EAAIG,OAAgBT,GAAWM,EAAQN,GAAW,IAAMM,IAE1D/B,EAAIE,YAAcuB,EAClBxC,EAAakB,MAAQsB","file":"main.662a67d6.js","sourceRoot":"..\\src","sourcesContent":["const el = (string) => document.querySelector(string);\r\n\r\nconst section = el(\"section\");\r\nconst main = el(\"main\");\r\nconst canvas = el(\"#canvas\");\r\nconst currentColor = el(\".currentColor\");\r\nconst thickness = el(\".thickness\");\r\nconst brushColor = el(\".brushColor\");\r\n\r\n// 优化移动端浏览器工具栏高度包含于100vh的问题，将浏览器真正视口高度作为 section 样式高度\r\nlet vh = window.innerHeight * 0.01;\r\nsection.style.setProperty(\"--vh\", `${vh}px`);\r\n// 设置画布宽高及样式宽高（不设置样式宽高会被 flex-grow 拉长）\r\nconst mainWidth = parseInt(main.clientWidth * 0.8);\r\nconst mainHeight = parseInt(main.clientHeight * 0.9);\r\ncanvas.width = `${mainWidth}`;\r\ncanvas.height = `${mainHeight}`;\r\ncanvas.style.width = `${mainWidth}px`;\r\ncanvas.style.height = `${mainHeight}px`;\r\n\r\nconst ctx = canvas.getContext(\"2d\");\r\nctx.strokeStyle = currentColor.value;\r\nctx.lineWidth = thickness.value;\r\nctx.lineJoin = \"round\";\r\nlet painting = false;\r\n// 上一个绘画路径点的坐标\r\nlet lastX = 0;\r\nlet lastY = 0;\r\n\r\n// 鼠标绘图\r\ncanvas.addEventListener(\"mousedown\", (e) => {\r\n  painting = true;\r\n  lastX = e.offsetX;\r\n  lastY = e.offsetY;\r\n});\r\ncanvas.addEventListener(\"mousemove\", (e) => {\r\n  if (painting) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(lastX, lastY);\r\n    ctx.lineTo(e.offsetX, e.offsetY);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    lastX = e.offsetX;\r\n    lastY = e.offsetY;\r\n  }\r\n});\r\ncanvas.addEventListener(\"mouseup\", (e) => {\r\n  painting = false;\r\n});\r\n// 鼠标移出画布停止绘画，防止再次进入产生连线\r\ncanvas.addEventListener(\"mouseout\", (e) => {\r\n  painting = false;\r\n});\r\n// 触摸绘图\r\ncanvas.addEventListener(\"touchstart\", (e) => {\r\n  painting = true;\r\n  lastX = e.touches[0].pageX - e.touches[0].target.offsetLeft;\r\n  lastY = e.touches[0].pageY - e.touches[0].target.offsetTop;\r\n});\r\ncanvas.addEventListener(\"touchmove\", (e) => {\r\n  if (painting) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(lastX, lastY);\r\n    ctx.lineTo(\r\n      e.touches[0].pageX - e.touches[0].target.offsetLeft,\r\n      e.touches[0].pageY - e.touches[0].target.offsetTop\r\n    );\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    lastX = e.touches[0].pageX - e.touches[0].target.offsetLeft;\r\n    lastY = e.touches[0].pageY - e.touches[0].target.offsetTop;\r\n  }\r\n});\r\ncanvas.addEventListener(\"touchend\", (e) => {\r\n  painting = false;\r\n});\r\n// 触摸移出画布停止绘画，防止再次进入产生连线\r\ncanvas.addEventListener(\"touchcancel\", (e) => {\r\n  painting = false;\r\n});\r\n\r\ncurrentColor.addEventListener(\"input\", (e) => {\r\n  ctx.strokeStyle = e.target.value;\r\n});\r\nthickness.addEventListener(\"input\", (e) => {\r\n  ctx.lineWidth = e.target.value;\r\n});\r\n// 点击色块改变画笔颜色，将色块背景色赋值给 currentColor.value （RGB 转为 HEX ）\r\nbrushColor.addEventListener(\"click\", (e) => {\r\n  if (e.target.matches(\"li\")) {\r\n    let color16 = \"#\";\r\n    const color = getComputedStyle(e.target).backgroundColor;\r\n    color.split(\",\").forEach((item) => {\r\n      const str = parseInt(item.match(/\\d{1,3}/)).toString(16);\r\n      str.length === 2 ? (color16 += str) : (color16 += \"0\" + str); // 确保六位数 HEX 颜色值\r\n    });\r\n    ctx.strokeStyle = color16;\r\n    currentColor.value = color16;\r\n  }\r\n});\r\n"]}